// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ioid.proto

#include "ioid.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ioid_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ioid_2eproto = nullptr;
const uint32_t TableStruct_ioid_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_ioid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nioid.proto*Z\n\004IOID\022\025\n\021IOID_REGISTER_RE"
  "Q\020\000\022\025\n\021IOID_REGISTER_RSP\020\001\022\021\n\rIOID_AUTH_"
  "REQ\020\002\022\021\n\rIOID_AUTH_RSP\020\003b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ioid_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ioid_2eproto = {
  false, false, 112, descriptor_table_protodef_ioid_2eproto, "ioid.proto", 
  &descriptor_table_ioid_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_ioid_2eproto::offsets,
  nullptr, file_level_enum_descriptors_ioid_2eproto, file_level_service_descriptors_ioid_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ioid_2eproto_getter() {
  return &descriptor_table_ioid_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ioid_2eproto(&descriptor_table_ioid_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IOID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ioid_2eproto);
  return file_level_enum_descriptors_ioid_2eproto[0];
}
bool IOID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
