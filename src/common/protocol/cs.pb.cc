// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs.proto

#include "cs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CSAuthReq::CSAuthReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : role_id_(0u)
  , game_id_(0u){}
struct CSAuthReqDefaultTypeInternal {
  constexpr CSAuthReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CSAuthReqDefaultTypeInternal() {}
  union {
    CSAuthReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CSAuthReqDefaultTypeInternal _CSAuthReq_default_instance_;
constexpr SCAuthRsp::SCAuthRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct SCAuthRspDefaultTypeInternal {
  constexpr SCAuthRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SCAuthRspDefaultTypeInternal() {}
  union {
    SCAuthRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SCAuthRspDefaultTypeInternal _SCAuthRsp_default_instance_;
constexpr CSLoginReq::CSLoginReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CSLoginReqDefaultTypeInternal {
  constexpr CSLoginReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CSLoginReqDefaultTypeInternal() {}
  union {
    CSLoginReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CSLoginReqDefaultTypeInternal _CSLoginReq_default_instance_;
constexpr SCLoginRsp::SCLoginRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct SCLoginRspDefaultTypeInternal {
  constexpr SCLoginRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SCLoginRspDefaultTypeInternal() {}
  union {
    SCLoginRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SCLoginRspDefaultTypeInternal _SCLoginRsp_default_instance_;
constexpr CSLogoutReq::CSLogoutReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CSLogoutReqDefaultTypeInternal {
  constexpr CSLogoutReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CSLogoutReqDefaultTypeInternal() {}
  union {
    CSLogoutReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CSLogoutReqDefaultTypeInternal _CSLogoutReq_default_instance_;
constexpr CSHeartBeatReq::CSHeartBeatReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CSHeartBeatReqDefaultTypeInternal {
  constexpr CSHeartBeatReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CSHeartBeatReqDefaultTypeInternal() {}
  union {
    CSHeartBeatReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CSHeartBeatReqDefaultTypeInternal _CSHeartBeatReq_default_instance_;
constexpr SCHeartBeatRsp::SCHeartBeatRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SCHeartBeatRspDefaultTypeInternal {
  constexpr SCHeartBeatRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SCHeartBeatRspDefaultTypeInternal() {}
  union {
    SCHeartBeatRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SCHeartBeatRspDefaultTypeInternal _SCHeartBeatRsp_default_instance_;
constexpr CSPkgHead::CSPkgHead(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0)
{}
struct CSPkgHeadDefaultTypeInternal {
  constexpr CSPkgHeadDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CSPkgHeadDefaultTypeInternal() {}
  union {
    CSPkgHead _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CSPkgHeadDefaultTypeInternal _CSPkgHead_default_instance_;
constexpr CSPkgBody::CSPkgBody(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct CSPkgBodyDefaultTypeInternal {
  constexpr CSPkgBodyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CSPkgBodyDefaultTypeInternal() {}
  union {
    CSPkgBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CSPkgBodyDefaultTypeInternal _CSPkgBody_default_instance_;
constexpr CSPkg::CSPkg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : head_(nullptr)
  , body_(nullptr){}
struct CSPkgDefaultTypeInternal {
  constexpr CSPkgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CSPkgDefaultTypeInternal() {}
  union {
    CSPkg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CSPkgDefaultTypeInternal _CSPkg_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cs_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_cs_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cs_2eproto = nullptr;

const uint32_t TableStruct_cs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CSAuthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CSAuthReq, role_id_),
  PROTOBUF_FIELD_OFFSET(::CSAuthReq, game_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SCAuthRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SCAuthRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CSLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SCLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SCLoginRsp, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CSLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CSHeartBeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SCHeartBeatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CSPkgHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CSPkgHead, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CSPkgBody, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::CSPkgBody, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::CSPkgBody, body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CSPkg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::CSPkg, head_),
  PROTOBUF_FIELD_OFFSET(::CSPkg, body_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::CSAuthReq)},
  { 8, -1, -1, sizeof(::SCAuthRsp)},
  { 15, -1, -1, sizeof(::CSLoginReq)},
  { 21, -1, -1, sizeof(::SCLoginRsp)},
  { 28, -1, -1, sizeof(::CSLogoutReq)},
  { 34, -1, -1, sizeof(::CSHeartBeatReq)},
  { 40, -1, -1, sizeof(::SCHeartBeatRsp)},
  { 46, -1, -1, sizeof(::CSPkgHead)},
  { 53, -1, -1, sizeof(::CSPkgBody)},
  { 67, -1, -1, sizeof(::CSPkg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CSAuthReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SCAuthRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CSLoginReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SCLoginRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CSLogoutReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CSHeartBeatReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SCHeartBeatRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CSPkgHead_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CSPkgBody_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CSPkg_default_instance_),
};

const char descriptor_table_protodef_cs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\010cs.proto\032\ncsid.proto\"-\n\tCSAuthReq\022\017\n\007r"
  "ole_id\030\001 \001(\r\022\017\n\007game_id\030\002 \001(\r\"E\n\tSCAuthR"
  "sp\022!\n\006result\030\001 \001(\0162\021.SCAuthRsp.RESULT\"\025\n"
  "\006RESULT\022\013\n\007SUCCESS\020\000\"\014\n\nCSLoginReq\"G\n\nSC"
  "LoginRsp\022\"\n\006result\030\001 \001(\0162\022.SCLoginRsp.RE"
  "SULT\"\025\n\006RESULT\022\013\n\007SUCCESS\020\000\"\r\n\013CSLogoutR"
  "eq\"\020\n\016CSHeartBeatReq\"\020\n\016SCHeartBeatRsp\"\036"
  "\n\tCSPkgHead\022\021\n\002id\030\001 \001(\0162\005.CSID\"\221\002\n\tCSPkg"
  "Body\022\036\n\010auth_req\030\001 \001(\0132\n.CSAuthReqH\000\022\036\n\010"
  "auth_rsp\030\002 \001(\0132\n.SCAuthRspH\000\022 \n\tlogin_re"
  "q\030\003 \001(\0132\013.CSLoginReqH\000\022 \n\tlogin_rsp\030\004 \001("
  "\0132\013.SCLoginRspH\000\022\"\n\nlogout_req\030\005 \001(\0132\014.C"
  "SLogoutReqH\000\022)\n\016heart_beat_req\030\006 \001(\0132\017.C"
  "SHeartBeatReqH\000\022)\n\016heart_beat_rsp\030\007 \001(\0132"
  "\017.SCHeartBeatRspH\000B\006\n\004body\";\n\005CSPkg\022\030\n\004h"
  "ead\030\001 \001(\0132\n.CSPkgHead\022\030\n\004body\030\002 \001(\0132\n.CS"
  "PkgBodyb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cs_2eproto_deps[1] = {
  &::descriptor_table_csid_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cs_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cs_2eproto = {
  false, false, 655, descriptor_table_protodef_cs_2eproto, "cs.proto", 
  &descriptor_table_cs_2eproto_once, descriptor_table_cs_2eproto_deps, 1, 10,
  schemas, file_default_instances, TableStruct_cs_2eproto::offsets,
  file_level_metadata_cs_2eproto, file_level_enum_descriptors_cs_2eproto, file_level_service_descriptors_cs_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_cs_2eproto_getter() {
  return &descriptor_table_cs_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_cs_2eproto(&descriptor_table_cs_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SCAuthRsp_RESULT_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cs_2eproto);
  return file_level_enum_descriptors_cs_2eproto[0];
}
bool SCAuthRsp_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SCAuthRsp_RESULT SCAuthRsp::SUCCESS;
constexpr SCAuthRsp_RESULT SCAuthRsp::RESULT_MIN;
constexpr SCAuthRsp_RESULT SCAuthRsp::RESULT_MAX;
constexpr int SCAuthRsp::RESULT_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SCLoginRsp_RESULT_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cs_2eproto);
  return file_level_enum_descriptors_cs_2eproto[1];
}
bool SCLoginRsp_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr SCLoginRsp_RESULT SCLoginRsp::SUCCESS;
constexpr SCLoginRsp_RESULT SCLoginRsp::RESULT_MIN;
constexpr SCLoginRsp_RESULT SCLoginRsp::RESULT_MAX;
constexpr int SCLoginRsp::RESULT_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class CSAuthReq::_Internal {
 public:
};

CSAuthReq::CSAuthReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CSAuthReq)
}
CSAuthReq::CSAuthReq(const CSAuthReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&role_id_, &from.role_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&game_id_) -
    reinterpret_cast<char*>(&role_id_)) + sizeof(game_id_));
  // @@protoc_insertion_point(copy_constructor:CSAuthReq)
}

inline void CSAuthReq::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&role_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&game_id_) -
    reinterpret_cast<char*>(&role_id_)) + sizeof(game_id_));
}

CSAuthReq::~CSAuthReq() {
  // @@protoc_insertion_point(destructor:CSAuthReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CSAuthReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CSAuthReq::ArenaDtor(void* object) {
  CSAuthReq* _this = reinterpret_cast< CSAuthReq* >(object);
  (void)_this;
}
void CSAuthReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CSAuthReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CSAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:CSAuthReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&role_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&game_id_) -
      reinterpret_cast<char*>(&role_id_)) + sizeof(game_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CSAuthReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 game_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          game_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CSAuthReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSAuthReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 role_id = 1;
  if (this->_internal_role_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_role_id(), target);
  }

  // uint32 game_id = 2;
  if (this->_internal_game_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_game_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSAuthReq)
  return target;
}

size_t CSAuthReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSAuthReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 role_id = 1;
  if (this->_internal_role_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_role_id());
  }

  // uint32 game_id = 2;
  if (this->_internal_game_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_game_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSAuthReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CSAuthReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSAuthReq::GetClassData() const { return &_class_data_; }

void CSAuthReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CSAuthReq *>(to)->MergeFrom(
      static_cast<const CSAuthReq &>(from));
}


void CSAuthReq::MergeFrom(const CSAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_role_id() != 0) {
    _internal_set_role_id(from._internal_role_id());
  }
  if (from._internal_game_id() != 0) {
    _internal_set_game_id(from._internal_game_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CSAuthReq::CopyFrom(const CSAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSAuthReq::IsInitialized() const {
  return true;
}

void CSAuthReq::InternalSwap(CSAuthReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSAuthReq, game_id_)
      + sizeof(CSAuthReq::game_id_)
      - PROTOBUF_FIELD_OFFSET(CSAuthReq, role_id_)>(
          reinterpret_cast<char*>(&role_id_),
          reinterpret_cast<char*>(&other->role_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CSAuthReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[0]);
}

// ===================================================================

class SCAuthRsp::_Internal {
 public:
};

SCAuthRsp::SCAuthRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:SCAuthRsp)
}
SCAuthRsp::SCAuthRsp(const SCAuthRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SCAuthRsp)
}

inline void SCAuthRsp::SharedCtor() {
result_ = 0;
}

SCAuthRsp::~SCAuthRsp() {
  // @@protoc_insertion_point(destructor:SCAuthRsp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SCAuthRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SCAuthRsp::ArenaDtor(void* object) {
  SCAuthRsp* _this = reinterpret_cast< SCAuthRsp* >(object);
  (void)_this;
}
void SCAuthRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SCAuthRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SCAuthRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:SCAuthRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SCAuthRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .SCAuthRsp.RESULT result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::SCAuthRsp_RESULT>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SCAuthRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SCAuthRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .SCAuthRsp.RESULT result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SCAuthRsp)
  return target;
}

size_t SCAuthRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SCAuthRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SCAuthRsp.RESULT result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SCAuthRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SCAuthRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SCAuthRsp::GetClassData() const { return &_class_data_; }

void SCAuthRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SCAuthRsp *>(to)->MergeFrom(
      static_cast<const SCAuthRsp &>(from));
}


void SCAuthRsp::MergeFrom(const SCAuthRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SCAuthRsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SCAuthRsp::CopyFrom(const SCAuthRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SCAuthRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SCAuthRsp::IsInitialized() const {
  return true;
}

void SCAuthRsp::InternalSwap(SCAuthRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SCAuthRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[1]);
}

// ===================================================================

class CSLoginReq::_Internal {
 public:
};

CSLoginReq::CSLoginReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CSLoginReq)
}
CSLoginReq::CSLoginReq(const CSLoginReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSLoginReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSLoginReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSLoginReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CSLoginReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[2]);
}

// ===================================================================

class SCLoginRsp::_Internal {
 public:
};

SCLoginRsp::SCLoginRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:SCLoginRsp)
}
SCLoginRsp::SCLoginRsp(const SCLoginRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:SCLoginRsp)
}

inline void SCLoginRsp::SharedCtor() {
result_ = 0;
}

SCLoginRsp::~SCLoginRsp() {
  // @@protoc_insertion_point(destructor:SCLoginRsp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SCLoginRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SCLoginRsp::ArenaDtor(void* object) {
  SCLoginRsp* _this = reinterpret_cast< SCLoginRsp* >(object);
  (void)_this;
}
void SCLoginRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SCLoginRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SCLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:SCLoginRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SCLoginRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .SCLoginRsp.RESULT result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_result(static_cast<::SCLoginRsp_RESULT>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SCLoginRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SCLoginRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .SCLoginRsp.RESULT result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SCLoginRsp)
  return target;
}

size_t SCLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SCLoginRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SCLoginRsp.RESULT result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SCLoginRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SCLoginRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SCLoginRsp::GetClassData() const { return &_class_data_; }

void SCLoginRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SCLoginRsp *>(to)->MergeFrom(
      static_cast<const SCLoginRsp &>(from));
}


void SCLoginRsp::MergeFrom(const SCLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SCLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SCLoginRsp::CopyFrom(const SCLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SCLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SCLoginRsp::IsInitialized() const {
  return true;
}

void SCLoginRsp::InternalSwap(SCLoginRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SCLoginRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[3]);
}

// ===================================================================

class CSLogoutReq::_Internal {
 public:
};

CSLogoutReq::CSLogoutReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CSLogoutReq)
}
CSLogoutReq::CSLogoutReq(const CSLogoutReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSLogoutReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSLogoutReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSLogoutReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CSLogoutReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[4]);
}

// ===================================================================

class CSHeartBeatReq::_Internal {
 public:
};

CSHeartBeatReq::CSHeartBeatReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:CSHeartBeatReq)
}
CSHeartBeatReq::CSHeartBeatReq(const CSHeartBeatReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CSHeartBeatReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSHeartBeatReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSHeartBeatReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CSHeartBeatReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[5]);
}

// ===================================================================

class SCHeartBeatRsp::_Internal {
 public:
};

SCHeartBeatRsp::SCHeartBeatRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:SCHeartBeatRsp)
}
SCHeartBeatRsp::SCHeartBeatRsp(const SCHeartBeatRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SCHeartBeatRsp)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SCHeartBeatRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SCHeartBeatRsp::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SCHeartBeatRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[6]);
}

// ===================================================================

class CSPkgHead::_Internal {
 public:
};

CSPkgHead::CSPkgHead(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CSPkgHead)
}
CSPkgHead::CSPkgHead(const CSPkgHead& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:CSPkgHead)
}

inline void CSPkgHead::SharedCtor() {
id_ = 0;
}

CSPkgHead::~CSPkgHead() {
  // @@protoc_insertion_point(destructor:CSPkgHead)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CSPkgHead::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CSPkgHead::ArenaDtor(void* object) {
  CSPkgHead* _this = reinterpret_cast< CSPkgHead* >(object);
  (void)_this;
}
void CSPkgHead::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CSPkgHead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CSPkgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:CSPkgHead)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CSPkgHead::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CSID id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_id(static_cast<::CSID>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CSPkgHead::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSPkgHead)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CSID id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSPkgHead)
  return target;
}

size_t CSPkgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSPkgHead)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CSID id = 1;
  if (this->_internal_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSPkgHead::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CSPkgHead::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSPkgHead::GetClassData() const { return &_class_data_; }

void CSPkgHead::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CSPkgHead *>(to)->MergeFrom(
      static_cast<const CSPkgHead &>(from));
}


void CSPkgHead::MergeFrom(const CSPkgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSPkgHead)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CSPkgHead::CopyFrom(const CSPkgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSPkgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSPkgHead::IsInitialized() const {
  return true;
}

void CSPkgHead::InternalSwap(CSPkgHead* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CSPkgHead::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[7]);
}

// ===================================================================

class CSPkgBody::_Internal {
 public:
  static const ::CSAuthReq& auth_req(const CSPkgBody* msg);
  static const ::SCAuthRsp& auth_rsp(const CSPkgBody* msg);
  static const ::CSLoginReq& login_req(const CSPkgBody* msg);
  static const ::SCLoginRsp& login_rsp(const CSPkgBody* msg);
  static const ::CSLogoutReq& logout_req(const CSPkgBody* msg);
  static const ::CSHeartBeatReq& heart_beat_req(const CSPkgBody* msg);
  static const ::SCHeartBeatRsp& heart_beat_rsp(const CSPkgBody* msg);
};

const ::CSAuthReq&
CSPkgBody::_Internal::auth_req(const CSPkgBody* msg) {
  return *msg->body_.auth_req_;
}
const ::SCAuthRsp&
CSPkgBody::_Internal::auth_rsp(const CSPkgBody* msg) {
  return *msg->body_.auth_rsp_;
}
const ::CSLoginReq&
CSPkgBody::_Internal::login_req(const CSPkgBody* msg) {
  return *msg->body_.login_req_;
}
const ::SCLoginRsp&
CSPkgBody::_Internal::login_rsp(const CSPkgBody* msg) {
  return *msg->body_.login_rsp_;
}
const ::CSLogoutReq&
CSPkgBody::_Internal::logout_req(const CSPkgBody* msg) {
  return *msg->body_.logout_req_;
}
const ::CSHeartBeatReq&
CSPkgBody::_Internal::heart_beat_req(const CSPkgBody* msg) {
  return *msg->body_.heart_beat_req_;
}
const ::SCHeartBeatRsp&
CSPkgBody::_Internal::heart_beat_rsp(const CSPkgBody* msg) {
  return *msg->body_.heart_beat_rsp_;
}
void CSPkgBody::set_allocated_auth_req(::CSAuthReq* auth_req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_body();
  if (auth_req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CSAuthReq>::GetOwningArena(auth_req);
    if (message_arena != submessage_arena) {
      auth_req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth_req, submessage_arena);
    }
    set_has_auth_req();
    body_.auth_req_ = auth_req;
  }
  // @@protoc_insertion_point(field_set_allocated:CSPkgBody.auth_req)
}
void CSPkgBody::set_allocated_auth_rsp(::SCAuthRsp* auth_rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_body();
  if (auth_rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::SCAuthRsp>::GetOwningArena(auth_rsp);
    if (message_arena != submessage_arena) {
      auth_rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, auth_rsp, submessage_arena);
    }
    set_has_auth_rsp();
    body_.auth_rsp_ = auth_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:CSPkgBody.auth_rsp)
}
void CSPkgBody::set_allocated_login_req(::CSLoginReq* login_req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_body();
  if (login_req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CSLoginReq>::GetOwningArena(login_req);
    if (message_arena != submessage_arena) {
      login_req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, login_req, submessage_arena);
    }
    set_has_login_req();
    body_.login_req_ = login_req;
  }
  // @@protoc_insertion_point(field_set_allocated:CSPkgBody.login_req)
}
void CSPkgBody::set_allocated_login_rsp(::SCLoginRsp* login_rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_body();
  if (login_rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::SCLoginRsp>::GetOwningArena(login_rsp);
    if (message_arena != submessage_arena) {
      login_rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, login_rsp, submessage_arena);
    }
    set_has_login_rsp();
    body_.login_rsp_ = login_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:CSPkgBody.login_rsp)
}
void CSPkgBody::set_allocated_logout_req(::CSLogoutReq* logout_req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_body();
  if (logout_req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CSLogoutReq>::GetOwningArena(logout_req);
    if (message_arena != submessage_arena) {
      logout_req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, logout_req, submessage_arena);
    }
    set_has_logout_req();
    body_.logout_req_ = logout_req;
  }
  // @@protoc_insertion_point(field_set_allocated:CSPkgBody.logout_req)
}
void CSPkgBody::set_allocated_heart_beat_req(::CSHeartBeatReq* heart_beat_req) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_body();
  if (heart_beat_req) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::CSHeartBeatReq>::GetOwningArena(heart_beat_req);
    if (message_arena != submessage_arena) {
      heart_beat_req = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heart_beat_req, submessage_arena);
    }
    set_has_heart_beat_req();
    body_.heart_beat_req_ = heart_beat_req;
  }
  // @@protoc_insertion_point(field_set_allocated:CSPkgBody.heart_beat_req)
}
void CSPkgBody::set_allocated_heart_beat_rsp(::SCHeartBeatRsp* heart_beat_rsp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_body();
  if (heart_beat_rsp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::SCHeartBeatRsp>::GetOwningArena(heart_beat_rsp);
    if (message_arena != submessage_arena) {
      heart_beat_rsp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, heart_beat_rsp, submessage_arena);
    }
    set_has_heart_beat_rsp();
    body_.heart_beat_rsp_ = heart_beat_rsp;
  }
  // @@protoc_insertion_point(field_set_allocated:CSPkgBody.heart_beat_rsp)
}
CSPkgBody::CSPkgBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CSPkgBody)
}
CSPkgBody::CSPkgBody(const CSPkgBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_body();
  switch (from.body_case()) {
    case kAuthReq: {
      _internal_mutable_auth_req()->::CSAuthReq::MergeFrom(from._internal_auth_req());
      break;
    }
    case kAuthRsp: {
      _internal_mutable_auth_rsp()->::SCAuthRsp::MergeFrom(from._internal_auth_rsp());
      break;
    }
    case kLoginReq: {
      _internal_mutable_login_req()->::CSLoginReq::MergeFrom(from._internal_login_req());
      break;
    }
    case kLoginRsp: {
      _internal_mutable_login_rsp()->::SCLoginRsp::MergeFrom(from._internal_login_rsp());
      break;
    }
    case kLogoutReq: {
      _internal_mutable_logout_req()->::CSLogoutReq::MergeFrom(from._internal_logout_req());
      break;
    }
    case kHeartBeatReq: {
      _internal_mutable_heart_beat_req()->::CSHeartBeatReq::MergeFrom(from._internal_heart_beat_req());
      break;
    }
    case kHeartBeatRsp: {
      _internal_mutable_heart_beat_rsp()->::SCHeartBeatRsp::MergeFrom(from._internal_heart_beat_rsp());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CSPkgBody)
}

inline void CSPkgBody::SharedCtor() {
clear_has_body();
}

CSPkgBody::~CSPkgBody() {
  // @@protoc_insertion_point(destructor:CSPkgBody)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CSPkgBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_body()) {
    clear_body();
  }
}

void CSPkgBody::ArenaDtor(void* object) {
  CSPkgBody* _this = reinterpret_cast< CSPkgBody* >(object);
  (void)_this;
}
void CSPkgBody::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CSPkgBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CSPkgBody::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:CSPkgBody)
  switch (body_case()) {
    case kAuthReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete body_.auth_req_;
      }
      break;
    }
    case kAuthRsp: {
      if (GetArenaForAllocation() == nullptr) {
        delete body_.auth_rsp_;
      }
      break;
    }
    case kLoginReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete body_.login_req_;
      }
      break;
    }
    case kLoginRsp: {
      if (GetArenaForAllocation() == nullptr) {
        delete body_.login_rsp_;
      }
      break;
    }
    case kLogoutReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete body_.logout_req_;
      }
      break;
    }
    case kHeartBeatReq: {
      if (GetArenaForAllocation() == nullptr) {
        delete body_.heart_beat_req_;
      }
      break;
    }
    case kHeartBeatRsp: {
      if (GetArenaForAllocation() == nullptr) {
        delete body_.heart_beat_rsp_;
      }
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BODY_NOT_SET;
}


void CSPkgBody::Clear() {
// @@protoc_insertion_point(message_clear_start:CSPkgBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_body();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CSPkgBody::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CSAuthReq auth_req = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_req(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .SCAuthRsp auth_rsp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_auth_rsp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CSLoginReq login_req = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_login_req(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .SCLoginRsp login_rsp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_login_rsp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CSLogoutReq logout_req = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_logout_req(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CSHeartBeatReq heart_beat_req = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_heart_beat_req(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .SCHeartBeatRsp heart_beat_rsp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_heart_beat_rsp(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CSPkgBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSPkgBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CSAuthReq auth_req = 1;
  if (_internal_has_auth_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::auth_req(this), target, stream);
  }

  // .SCAuthRsp auth_rsp = 2;
  if (_internal_has_auth_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::auth_rsp(this), target, stream);
  }

  // .CSLoginReq login_req = 3;
  if (_internal_has_login_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::login_req(this), target, stream);
  }

  // .SCLoginRsp login_rsp = 4;
  if (_internal_has_login_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::login_rsp(this), target, stream);
  }

  // .CSLogoutReq logout_req = 5;
  if (_internal_has_logout_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::logout_req(this), target, stream);
  }

  // .CSHeartBeatReq heart_beat_req = 6;
  if (_internal_has_heart_beat_req()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::heart_beat_req(this), target, stream);
  }

  // .SCHeartBeatRsp heart_beat_rsp = 7;
  if (_internal_has_heart_beat_rsp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::heart_beat_rsp(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSPkgBody)
  return target;
}

size_t CSPkgBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSPkgBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (body_case()) {
    // .CSAuthReq auth_req = 1;
    case kAuthReq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.auth_req_);
      break;
    }
    // .SCAuthRsp auth_rsp = 2;
    case kAuthRsp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.auth_rsp_);
      break;
    }
    // .CSLoginReq login_req = 3;
    case kLoginReq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.login_req_);
      break;
    }
    // .SCLoginRsp login_rsp = 4;
    case kLoginRsp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.login_rsp_);
      break;
    }
    // .CSLogoutReq logout_req = 5;
    case kLogoutReq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.logout_req_);
      break;
    }
    // .CSHeartBeatReq heart_beat_req = 6;
    case kHeartBeatReq: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.heart_beat_req_);
      break;
    }
    // .SCHeartBeatRsp heart_beat_rsp = 7;
    case kHeartBeatRsp: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *body_.heart_beat_rsp_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSPkgBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CSPkgBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSPkgBody::GetClassData() const { return &_class_data_; }

void CSPkgBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CSPkgBody *>(to)->MergeFrom(
      static_cast<const CSPkgBody &>(from));
}


void CSPkgBody::MergeFrom(const CSPkgBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSPkgBody)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.body_case()) {
    case kAuthReq: {
      _internal_mutable_auth_req()->::CSAuthReq::MergeFrom(from._internal_auth_req());
      break;
    }
    case kAuthRsp: {
      _internal_mutable_auth_rsp()->::SCAuthRsp::MergeFrom(from._internal_auth_rsp());
      break;
    }
    case kLoginReq: {
      _internal_mutable_login_req()->::CSLoginReq::MergeFrom(from._internal_login_req());
      break;
    }
    case kLoginRsp: {
      _internal_mutable_login_rsp()->::SCLoginRsp::MergeFrom(from._internal_login_rsp());
      break;
    }
    case kLogoutReq: {
      _internal_mutable_logout_req()->::CSLogoutReq::MergeFrom(from._internal_logout_req());
      break;
    }
    case kHeartBeatReq: {
      _internal_mutable_heart_beat_req()->::CSHeartBeatReq::MergeFrom(from._internal_heart_beat_req());
      break;
    }
    case kHeartBeatRsp: {
      _internal_mutable_heart_beat_rsp()->::SCHeartBeatRsp::MergeFrom(from._internal_heart_beat_rsp());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CSPkgBody::CopyFrom(const CSPkgBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSPkgBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSPkgBody::IsInitialized() const {
  return true;
}

void CSPkgBody::InternalSwap(CSPkgBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(body_, other->body_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CSPkgBody::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[8]);
}

// ===================================================================

class CSPkg::_Internal {
 public:
  static const ::CSPkgHead& head(const CSPkg* msg);
  static const ::CSPkgBody& body(const CSPkg* msg);
};

const ::CSPkgHead&
CSPkg::_Internal::head(const CSPkg* msg) {
  return *msg->head_;
}
const ::CSPkgBody&
CSPkg::_Internal::body(const CSPkg* msg) {
  return *msg->body_;
}
CSPkg::CSPkg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:CSPkg)
}
CSPkg::CSPkg(const CSPkg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_head()) {
    head_ = new ::CSPkgHead(*from.head_);
  } else {
    head_ = nullptr;
  }
  if (from._internal_has_body()) {
    body_ = new ::CSPkgBody(*from.body_);
  } else {
    body_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CSPkg)
}

inline void CSPkg::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&head_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&body_) -
    reinterpret_cast<char*>(&head_)) + sizeof(body_));
}

CSPkg::~CSPkg() {
  // @@protoc_insertion_point(destructor:CSPkg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CSPkg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete head_;
  if (this != internal_default_instance()) delete body_;
}

void CSPkg::ArenaDtor(void* object) {
  CSPkg* _this = reinterpret_cast< CSPkg* >(object);
  (void)_this;
}
void CSPkg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CSPkg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CSPkg::Clear() {
// @@protoc_insertion_point(message_clear_start:CSPkg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && head_ != nullptr) {
    delete head_;
  }
  head_ = nullptr;
  if (GetArenaForAllocation() == nullptr && body_ != nullptr) {
    delete body_;
  }
  body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CSPkg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .CSPkgHead head = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_head(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .CSPkgBody body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CSPkg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CSPkg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .CSPkgHead head = 1;
  if (this->_internal_has_head()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::head(this), target, stream);
  }

  // .CSPkgBody body = 2;
  if (this->_internal_has_body()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::body(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CSPkg)
  return target;
}

size_t CSPkg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CSPkg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .CSPkgHead head = 1;
  if (this->_internal_has_head()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *head_);
  }

  // .CSPkgBody body = 2;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *body_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CSPkg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CSPkg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CSPkg::GetClassData() const { return &_class_data_; }

void CSPkg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CSPkg *>(to)->MergeFrom(
      static_cast<const CSPkg &>(from));
}


void CSPkg::MergeFrom(const CSPkg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CSPkg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_head()) {
    _internal_mutable_head()->::CSPkgHead::MergeFrom(from._internal_head());
  }
  if (from._internal_has_body()) {
    _internal_mutable_body()->::CSPkgBody::MergeFrom(from._internal_body());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CSPkg::CopyFrom(const CSPkg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CSPkg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSPkg::IsInitialized() const {
  return true;
}

void CSPkg::InternalSwap(CSPkg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CSPkg, body_)
      + sizeof(CSPkg::body_)
      - PROTOBUF_FIELD_OFFSET(CSPkg, head_)>(
          reinterpret_cast<char*>(&head_),
          reinterpret_cast<char*>(&other->head_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CSPkg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_cs_2eproto_getter, &descriptor_table_cs_2eproto_once,
      file_level_metadata_cs_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CSAuthReq* Arena::CreateMaybeMessage< ::CSAuthReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSAuthReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SCAuthRsp* Arena::CreateMaybeMessage< ::SCAuthRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SCAuthRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::CSLoginReq* Arena::CreateMaybeMessage< ::CSLoginReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSLoginReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SCLoginRsp* Arena::CreateMaybeMessage< ::SCLoginRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SCLoginRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::CSLogoutReq* Arena::CreateMaybeMessage< ::CSLogoutReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSLogoutReq >(arena);
}
template<> PROTOBUF_NOINLINE ::CSHeartBeatReq* Arena::CreateMaybeMessage< ::CSHeartBeatReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSHeartBeatReq >(arena);
}
template<> PROTOBUF_NOINLINE ::SCHeartBeatRsp* Arena::CreateMaybeMessage< ::SCHeartBeatRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SCHeartBeatRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::CSPkgHead* Arena::CreateMaybeMessage< ::CSPkgHead >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSPkgHead >(arena);
}
template<> PROTOBUF_NOINLINE ::CSPkgBody* Arena::CreateMaybeMessage< ::CSPkgBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSPkgBody >(arena);
}
template<> PROTOBUF_NOINLINE ::CSPkg* Arena::CreateMaybeMessage< ::CSPkg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CSPkg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
