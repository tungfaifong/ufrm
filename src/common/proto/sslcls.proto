// ss protocol lbclt <-> lbsrv

syntax = "proto3";

import "common.proto";

message SSLCLSNode
{
	NODETYPE node_type = 1;
	uint32 node_id = 2;
	string ip = 3;
	uint32 port = 4;
}

message SSLCLSNodeRegister
{
	SSLCLSNode node = 1;
}

message SSLCLSNodeUnregister
{
	NODETYPE node_type = 1;
	uint32 node_id = 2;
}

message SSLCLSHeartBeatReq
{
	uint32 load = 1;
}

message SSLSLCHeartBeatRsp
{
}

message SSLCLSSubscribe
{
	NODETYPE node_type = 1;
}

message SSLSLCPublish
{
	enum PUBLISHTYPE
	{
		REGISTER = 0;
		UNREGISTER = 1;
		CHANGE = 2;
	}
	PUBLISHTYPE publish_type = 1;
	SSLCLSNode node = 2;
}

message SSLCLSGetAllNodesReq
{
	NODETYPE node_type = 1;
}

message SSLSLCGetAllNodesRsp
{
	repeated SSLCLSNode nodes = 1;
}

message SSLCLSGetLeastLoadNodeReq
{
	NODETYPE node_type = 1;
}

message SSLSLCGetLeastLoadNodeRsp
{
	SSLCLSNode node = 1;
}
